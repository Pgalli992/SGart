%!PS-Adobe-3.1 EPSF-3.0%%Title: Corriere della Sera LOGO.eps%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 9.0%AI9_PrintingDataBegin%%For:                    %%CreationDate: 9-06-2005%%CropBox: 0.000000 0.000000 419.444580 302.777832%%BoundingBox: 0 0 420 303 %%HiResBoundingBox: 0.000000 0.000000 419.444580 302.777832%%LanguageLevel: 2 %%DocumentData: Clean7Bit%%Pages: 1 %%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Core 2.0 0%%DocumentFonts: %%DocumentSuppliedFonts: %%PageOrder: Ascend%%DocumentProcessColors:  Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %%EndComments%%BeginDefaults%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 233 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_src256 256 string def/AGMCORE_dst64 64 string def/AGMCORE_srcLen nd/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_imagestring0 nd/AGMCORE_imagestring1 nd/AGMCORE_imagestring2 nd/AGMCORE_imagestring3 nd/AGMCORE_imagestring4 nd/AGMCORE_imagestring5 nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_mbuf () def/AGMCORE_ybuf () def/AGMCORE_kbuf () def/AGMCORE_gbuf () def/AGMCORE_bbuf () def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_arg1 nd/AGMCORE_arg2 nd/AGMCORE_&setgray nd/AGMCORE_&image nd/AGMCORE_&colorimage nd/AGMCORE_&imagemask nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&&setcolorspace nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_in_rip_sep nd/AGMCORE_host_sep nd/AGMCORE_will_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ccimage_exists nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_ndx nd/AGMCORE_err_strings nd/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/bdf{	bind def} bind def/xdf{	exch def} def/ldf {	load def} def/ddf{	put} def	/xddf{	3 -1 roll put} def	/xpt{	exch put} def	/bdict	{		mark	} def		/edict	{		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end	}def	/ps_level	/languagelevel where{		pop languagelevel	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/ndf{	1 index where{		pop pop pop	}{		dup xcheck		{bind}if		def	}ifelse} def/skip_image{	has_color ne{		dup 256 idiv		{currentfile AGMCORE_str256 readstring pop pop}repeat		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval		readstring pop pop	}{		pop	}ifelse} def/addprocs{     2{/exec load}repeat     3 1 roll     [ 5 1 roll ] bind cvx} def/colorbuf{	0 1 2 index length 1 sub		{		dup 2 index exch get 		255 exch sub 		2 index 		3 1 roll 		put		} for} def/makereadonlyarray{	/packedarray where		{pop packedarray}		{array astore readonly}	ifelse} def/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq 	{		dup /HalftoneType get 1 eq			{			/SpotFunction get			}			{			dup /HalftoneType get 2 eq				{				/GraySpotFunction get				}				{				pop				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}				{dup mul exch dup mul add 1 exch sub}ifelse}bind				}			ifelse			}		ifelse	}	if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/stkpath_clp_npth{	strokepath clip newpath} def/stk_n_clp_npth{	gsave stroke grestore clip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	userdict begin	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont		/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def				/AGMCORE_arg2 xdf	/AGMCORE_arg1 xdf		clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore			currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto		/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			dup (.) ne AGMCORE_arg1 0 lt and				{				pop				}				{				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt					{					currentpoint AGMCORE_deltaY sub exch pop					clippath pathbbox pop pop pop 44 add exch moveto					} if				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show				} ifelse						0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{			dup 94 eq 				{				pop				AGMCORE_arg1 0 ge					{					AGMCORE_arg1 AGMCORE_str256 cvs					dup /AGMCORE_tmp exch length def					AGMCORE_str256 exch 0 exch putinterval					AGMCORE_str256 0 AGMCORE_tmp getinterval					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt						{						currentpoint AGMCORE_deltaY sub exch pop						clippath pathbbox pop pop pop 44 add exch moveto						} if					AGMCORE_str256 0 AGMCORE_tmp getinterval show					}					{					/AGMCORE_arg1 0 def					} ifelse				0 1 AGMCORE_str256 length 1 sub					{					AGMCORE_str256 exch 0 put					}for				/AGMCORE_tmp 0 def				AGMCORE_arg1 0 ne					{					/AGMCORE_arg1 AGMCORE_arg2 def					} if				}				{				AGMCORE_str256 exch AGMCORE_tmp exch put				/AGMCORE_tmp AGMCORE_tmp 1 add def				}ifelse			} ifelse		} forall} bdflevel2{	/AGMCORE_map_reserved_ink_name	{		dup type /stringtype eq{			dup /Red eq{				pop (_Red_)			}{				dup /Green eq{					pop (_Green_)				}{					dup /Blue eq{						pop (_Blue_)					}{						dup /Cyan eq{							pop (_Cyan_)						}{							dup /Magenta eq{								pop (_Magenta_)							}{								dup /Yellow eq{									pop (_Yellow_)								}{									dup /Black eq{										pop (_Black_)									}{										dup / eq{											pop (Process)										}if									}ifelse								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse		}if	}def}if/doc_setup{	Adobe_AGM_Core begin		/AGMCORE_will_host_separate xdf	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf		errordict /AGM_handleerror known not		{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror			{			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and {				$error /newerror false put				AGMCORE_cur_err /AGMCORE_bad_environ eq					{					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version					}					{					AGMCORE_cur_err 0 0					} ifelse				compose_error_msg				} if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def		AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if		/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def		/AGMCORE_&&setcolorspace /setcolorspace ldf	}if	/AGMCORE_&image systemdict/image get def	/AGMCORE_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMCORE_&colorimage /colorimage ldf	}if	/AGMCORE_in_rip_sep		level2{			currentpagedevice/Separations 2 copy known{				get			}{				pop pop false			}ifelse		}{			false		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_gstate_known{		where{			/Adobe_AGM_Core_Id known		}{			false		}ifelse	}ndf	/AGMCORE_GSTATE AGMCORE_gstate_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 7 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	end}def/page_setup{	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def		/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def		/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def		/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or		}ifelse	def		AGMCORE_host_sep AGMCORE_will_host_separate not and {		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def		AGMCORE_color_space_onhost_seps	}if	/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots	}ifelse	{		/setcmykcolor[			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx			/setcmykcolor load dup type/operatortype ne{/exec cvx}if		]cvx def	}if	AGMCORE_host_sep{		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf		/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def		/map_index	{		1 index mul exch getinterval {255 div} forall	}def		level2{		/mo /moveto ldf		/ln /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		/invert_image_samples		{			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def		/get_gstate		{			AGMCORE_GSTATE begin			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def			/AGMCORE_GSTATE_clr_spc currentcolorspace def			/AGMCORE_GSTATE_clr_indx 0 def			/AGMCORE_GSTATE_clr_comps 12 array def			mark currentcolor counttomark				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop			/AGMCORE_GSTATE_fnt rootfont def			/AGMCORE_GSTATE_lw currentlinewidth def			/AGMCORE_GSTATE_lc currentlinecap def			/AGMCORE_GSTATE_lj currentlinejoin def			/AGMCORE_GSTATE_ml currentmiterlimit def			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf			/AGMCORE_GSTATE_sa currentstrokeadjust def						/AGMCORE_GSTATE_clr_rnd currentcolorrendering def			/AGMCORE_GSTATE_op currentoverprint def			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def			currentcolortransfer 				cvlit /AGMCORE_GSTATE_gy_xfer xdf 				cvlit /AGMCORE_GSTATE_b_xfer xdf				cvlit /AGMCORE_GSTATE_g_xfer xdf 				cvlit /AGMCORE_GSTATE_r_xfer xdf			/AGMCORE_GSTATE_ht currenthalftone def			/AGMCORE_GSTATE_flt currentflat def			end		}ndf				/set_gstate		{			AGMCORE_GSTATE begin			AGMCORE_GSTATE_ctm setmatrix			AGMCORE_GSTATE_clr_spc setcolorspace			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor			AGMCORE_GSTATE_fnt setfont			AGMCORE_GSTATE_lw setlinewidth			AGMCORE_GSTATE_lc setlinecap			AGMCORE_GSTATE_lj setlinejoin			AGMCORE_GSTATE_ml setmiterlimit			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash			AGMCORE_GSTATE_sa setstrokeadjust						AGMCORE_GSTATE_clr_rnd setcolorrendering			AGMCORE_GSTATE_op setoverprint			AGMCORE_GSTATE_bg cvx setblackgeneration			AGMCORE_GSTATE_ucr cvx setundercolorremoval			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or				{				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne					{					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark					} if				}{				AGMCORE_GSTATE_ht sethalftone				} ifelse			AGMCORE_GSTATE_flt setflat			end		}ndf		AGMCORE_producing_seps not{				/setcolorspace where{				/Adobe_AGM_Core_Id known not			}{				true			}ifelse			{				/setcolorspace				{					dup type dup /arraytype eq exch /packedarraytype eq or{						dup 0 get dup /Separation eq{							pop							[ exch {} forall ]							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put						}{							/DeviceN eq {								[ exch {} forall ]								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put							}if						}ifelse					}if					AGMCORE_&&setcolorspace 				}def			}if		}if		}{				/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/ln{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def				/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def				/n_color_components		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop 1			}{				/DeviceCMYK eq{					4				}{					3				}ifelse			}ifelse		} def				/setcolor_devicecolor		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def			/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse		/op /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/spclp /stkpath_clp_npth ldf	/f /fill ldf	/ef /eofill ldf	/s /stroke ldf	/sclp /stk_n_clp_npth ldf	/nclp /npth_clp ldf	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/idximg /indexed_imageormask ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf		currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall}def/page_trailer{	end}def/unload{	systemdict/languagelevel known{		systemdict/languagelevel get 2 ge{			userdict/Adobe_AGM_Core 2 copy known{				undef			}{				pop pop			}ifelse		}if	}if}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	Adobe_AGM_Core/AGMCORE_name xddf	false	currentpagedevice/SeparationColorNames get{		AGMCORE_name eq or	}forall}def/current_ink{	dup length 0 eq{		pop true	}{		Adobe_AGM_Core/ink_result false put		{			dup /ProcessCyan eq{				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf			}{				dup /ProcessMagenta eq{					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf				}{					dup /ProcessYellow eq{						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf					}{						dup /ProcessBlack eq{							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf						}{							dup /sep_colorspace_dict AGMCORE_gget dup null eq{								pop false ink_result or Adobe_AGM_Core/ink_result xddf							}{								/Name get eq{									1 setsepcolor									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf								}{									false ink_result or Adobe_AGM_Core/ink_result xddf								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse			pop 		} forall		ink_result	}ifelse}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 		/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf		AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx														AGMCORE_host_sep{								AGMCORE_is_cmyk_sep							}{								Name inRip_spot_has_ink not							}ifelse							{		 						/pop cvx 1							}if							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf												[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	1 setsepcolor	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		/MappedCSA CSA map_csa def		AGMCORE_host_sep level2 not and{			0 0 0 0 setcmykcolor		}{			[/Indexed MappedCSA 			level2 not has_color not and{				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{					pop [/DeviceGray]				}if				HiVal GrayLookup			}{				HiVal 				currentdict/RangeArray known{					{ 						/indexed_colorspace_dict AGMCORE_gget begin						Lookup exch 						dup HiVal gt{							pop HiVal						}if						NComponents mul NComponents getinterval {} forall						NComponents 1 sub -1 0{							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range							NComponents 1 roll						}for						end					} bind				}{					Lookup				}ifelse			}ifelse			] setcolorspace_opt						set_crd		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep{		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor	}{		setcolor	}ifelse} def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMCORE_&imagemask			}{				AGMCORE_&image			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMCORE_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMCORE_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint{		0 get		dup /DeviceGray eq{			pop AGMCORE_black_plate not		}{			/DeviceCMYK eq{				AGMCORE_is_cmyk_sep not			}if		}ifelse	}{		false	}ifelse}def/rdline {	currentfile AGMCORE_str256 readline pop} def/rdcmntline {	currentfile AGMCORE_str256 readline pop	(%) anchorsearch {pop} if} def/filter_cmyk{		dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch	{		AGMCORE_src256 readstring pop		dup length /AGMCORE_srcLen exch def		/AGMCORE_ndx 0 def				AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{			1 index exch get			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put			/AGMCORE_ndx AGMCORE_ndx 1 add def		}for		pop		AGMCORE_dst64 0 AGMCORE_ndx getinterval	}	bind	/exec cvx	] cvx} def/imageormask{	begin		SkipImageProc not{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq{					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					image				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					AGMCORE_host_sep{						currentgray 1 ne{							currentdict imageormask_sys						}{	 						currentoverprint not{			 					1 AGMCORE_&setgray	 							knockout_image_samples			 					currentdict imageormask_sys			 				}{			 					nulldevice currentdict imageormask_sys			 				}ifelse				 		}ifelse					}{						imagemask					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								MultipleDataSources{									4 {pop} repeat									/DataSource [										DataSource 0 get /exec cvx										DataSource 1 get /exec cvx										DataSource 2 get /exec cvx										DataSource 3 get /exec cvx										/AGMCORE_get_ink_data cvx									] cvx def								}{									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def								}ifelse									/Decode [ Decode 0 get Decode 1 get ] def								/MultipleDataSources false def								/NComponents 1 def								/Operator /image def								AGMCORE_is_cmyk_sep{									currentoverprint InksUsed current_ink not and{										nulldevice									}{										invert_image_samples									}ifelse								}{		 							currentoverprint not{		 								knockout_image_samples				 					}{				 						nulldevice				 					}ifelse					 			}ifelse						 		1 AGMCORE_&setgray								currentdict imageormask_sys							}{																	currentcolortransfer								{pop 1} exch addprocs 4 1 roll												{pop 1} exch addprocs 4 1 roll								{pop 1} exch addprocs 4 1 roll								{pop 1} exch addprocs 4 1 roll								setcolortransfer																	MultipleDataSources NComponents AGMCORE_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not{		 								currentoverprint not{		 									knockout_image_samples				 						}{				 							nulldevice				 						}ifelse					 				}if								}ifelse						 		1 AGMCORE_&setgray								currentdict imageormask_sys							}{								image							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentoverprint InksUsed current_ink not and{								}{									currentcolorspace overprint_plate not{										knockout_unitsq									}if								}ifelse							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}if	end}def/tint_image_to_color{	begin		Width Height BitsPerComponent ImageMatrix 		/DataSource load	end	Adobe_AGM_Core begin		/AGMCORE_mbuf 0 string def		/AGMCORE_ybuf 0 string def		/AGMCORE_kbuf 0 string def		{			colorbuf dup length AGMCORE_mbuf length ne				{				dup length dup dup				/AGMCORE_mbuf exch string def				/AGMCORE_ybuf exch string def				/AGMCORE_kbuf exch string def				} if			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop		}		addprocs		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage		end} def			/sep_imageormask_lev1{	begin		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{						{				255 mul round cvi GrayLookup exch get			} currenttransfer addprocs settransfer			currentdict imageormask		}{			/sep_colorspace_dict AGMCORE_gget/Components known{				MappedCSA 0 get /DeviceCMYK eq{					Components aload pop				}{					0 0 0 Components aload pop 1 exch sub				}ifelse								Adobe_AGM_Core/AGMCORE_k xddf 				Adobe_AGM_Core/AGMCORE_y xddf 				Adobe_AGM_Core/AGMCORE_m xddf 				Adobe_AGM_Core/AGMCORE_c xddf 									AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer					currentdict imageormask				}{ 										currentcolortransfer					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll					setcolortransfer					currentdict tint_image_to_color				}ifelse			}{								MappedCSA 0 get /DeviceGray eq {					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer					currentdict imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						currentdict tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll						setcolortransfer 						currentdict tint_image_to_color					}ifelse				}ifelse			}ifelse		}ifelse	end}def/sep_image_lev1_sep{	begin		/sep_colorspace_dict AGMCORE_gget/Components known{			Components aload pop						Adobe_AGM_Core/AGMCORE_k xddf 			Adobe_AGM_Core/AGMCORE_y xddf 			Adobe_AGM_Core/AGMCORE_m xddf 			Adobe_AGM_Core/AGMCORE_c xddf 							{AGMCORE_c mul 1 exch sub}			{AGMCORE_m mul 1 exch sub}			{AGMCORE_y mul 1 exch sub}			{AGMCORE_k mul 1 exch sub}		}{ 			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}		}ifelse				AGMCORE_get_ink_data currenttransfer addprocs settransfer				currentdict imageormask_sys				end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc not{		save mark 			AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMCORE_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentoverprint InksUsed current_ink not and{						}{							currentdict/ImageMatrix get concat							knockout_unitsq						}ifelse					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or{ 								knockout_image_samples		 					}{		 						nulldevice 		 					}ifelse							currentdict imageormask_sys 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}if	end	end}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin    currentdict 2 index known{    	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse	    addprocs /TransferFunction xdf 	    currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/read_image_file{	AGMCORE_imagefile 0 setfileposition	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put	exch	load exec}def/write_image_file{	{ (AGMCORE_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Core/AGMCORE_imagefile xddf 		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf		1 1 Height { 			pop			DataSource dup type /filetype eq{				AGMCORE_imbuf readstring pop			}{				exec			} ifelse			AGMCORE_imagefile exch writestring		}for		true	}ifelse}def/imageormask_l2_overprint{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile	}{		currentdict imageormask	}ifelse} def/indexed_imageormask{	begin		save mark 	 		currentdict 		AGMCORE_host_sep{ 						Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{					knockout_unitsq				}if			}{	 			AGMCORE_is_cmyk_sep{					Operator /imagemask eq{						imageormask_sys					}{						level2{							indexed_image_lev2_sep						}{							indexed_image_lev1_sep						}ifelse					}ifelse				}{					currentoverprint not{						knockout_image_samples		 				imageormask_sys		 			}{		 				nulldevice currentdict imageormask_sys		 			}ifelse				}ifelse			}ifelse 		}{			level2{				imageormask			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_imageormask_lev1{	/indexed_colorspace_dict AGMCORE_gget begin	begin		currentdict		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{						{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer			imageormask		}{						MappedCSA 0 get /DeviceGray eq {				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceCMYK eq {					currentcolortransfer					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll					setcolortransfer 					tint_image_to_color				}{ 					currentcolortransfer					{pop 1} exch addprocs 4 1 roll					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll					setcolortransfer 					tint_image_to_color				}ifelse			}ifelse		}ifelse	end end}def/indexed_image_lev1_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}				AGMCORE_get_ink_data currenttransfer addprocs settransfer				currentdict imageormask_sys				end end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin				currentcolorspace 		dup 1 /DeviceGray put		dup 3 [			currentcolorspace 3 get 			{				exch 4 mul 4 getinterval {} forall				AGMCORE_get_ink_data 255 div 1 exch sub			} /exec cvx		] cvx put		setcolorspace				currentdict 		Operator /imagemask eq{			AGMCORE_&imagemask		}{			AGMCORE_&image		}ifelse				end end}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get	}if}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			false op [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{		currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse		Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/OPIimage{	dup type /dicttype ne{		10 dict begin			/DataSource xdf			/ImageMatrix xdf			/BitsPerComponent xdf			/Height xdf			/Width xdf			/MultipleDataSources false def			/NComponents 1 def			/ImageType 1 def			/Decode [0 1 def]			/SkipImageProc {false} def			currentdict		end	}if	dup begin		/HostSepColorImage false def		currentdict/Decode known not{			/Decode [				0 				currentcolorspace 0 get /Indexed eq{					2 BitsPerComponent exp 1 sub				}{					1				}ifelse			] 			def		}if		currentdict/Operator known not{			/Operator /image def		}if	end	/sep_colorspace_dict AGMCORE_gget null eq{		imageormask	}{		gsave		dup begin invert_image_samples end		sep_imageormask		grestore	}ifelse}def/cpaint_gcomp{	AGM_preserve_spots{		gsave		nulldevice	}if}def/cpaint_gsep{	AGM_preserve_spots{		grestore		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 	}{			gsave		nulldevice	}ifelse}def/cpaint_gend{	AGM_preserve_spots{		Adobe_AGM_Core/AGMCORE_ovp get setoverprint	}{		grestore	}ifelse	newpath}def/AGMCORE_ctm_stack bdict	/push_ctm {		stack length size le{			stack dup length 2 mul array 			dup /stack exch def			copy pop		}if		stack size 3 -1 roll put		/size size 1 add def	}	/pop_ctm {		/size size 1 sub def		size 0 lt{ 			/size 0 def		}if		stack size get	}	/stack 1 array	/size 0 edict def/save_ctm{	matrix currentmatrix AGMCORE_ctm_stack begin 		push_ctm 	end}def/restore_ctm{	AGMCORE_ctm_stack begin		pop_ctm 	end	setmatrix}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}defendsystemdict /setpacking known{	setpacking} if%%EndResource%%EndProlog%%BeginSetupAdobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin/AGMCORE_bad_environ (Impostazioni d'ambiente insufficienti. I requisiti minimi sonoPostScript Level ^\te PostScript versione ^. Accertatevi che il file PPD sia adatto o cheil livello PostScript richiesto sia supportato dalla stampante. ) def/AGMCORE_color_space_onhost_seps (Impossibile effettuare la selezionedi questo processo sul computer host. ) def/AGMCORE_invalid_color_space (Spazio cromatico del processo non valido. ) defend put2 2010 true Adobe_AGM_Core/doc_setup get exec%%EndSetup%%Page: name:1 1%%EndPageComments%%BeginPageSetupAdobe_AGM_Core/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddfmark/0 [/DeviceGray] add_csa/CSA /0 /1 [/DeviceCMYK] add_csa/CSA /1 /2 [/DeviceRGB] add_csa/CSA /2 cleartomark800 path_rez1 -1 scale 0 -302.778 translategsave[1 0 0 1 0 0 ] concatgsave0 0 mo0 302.778 ln419.445 302.778 ln419.445 0 lnclp419.445 302.778 mo0 302.778 ln0 0 ln419.445 0 ln419.445 302.778 lnfalse op0 0 0 0 cmykf107.438 154.684 mo107.297 155.456 107.561 155.999 108.227 156.313 cv108.437 156.384 108.787 156.454 109.278 156.524 cv108.542 161.466 ln98.0808 161.466 ln99.1326 156.472 ln99.8328 156.472 100.394 156.331 100.814 156.052 cv100.955 155.981 101.113 155.823 101.288 155.577 cv103.706 142.646 ln103.862 141.809 103.621 141.237 103.022 140.965 cv102.85 140.887 102.513 140.843 102.023 140.807 cv102.76 135.866 ln113.063 135.866 ln112.01 140.86 ln111.135 140.79 110.487 140.965 110.067 141.385 cv109.996 141.455 109.908 141.578 109.802 141.753 cv107.438 154.684 ln0 0 0 1 cmykf28.9548 135.498 mo27.0627 146.589 ln22.6467 146.589 ln23.0134 144.328 ln23.0828 143.908 23.1199 143.593 23.1199 143.383 cv23.1199 142.646 22.9187 142.068 22.5149 141.648 cv22.1125 141.227 21.6125 140.965 21.0168 140.86 cv19.5095 140.86 18.5808 141.552 18.3884 142.962 cv17.0217 153.003 ln16.9978 153.18 16.9685 153.44 16.9685 153.79 cv16.9685 154.491 17.1008 155.069 17.3635 155.526 cv17.6267 155.981 18.0037 156.208 18.4939 156.208 cv19.5457 156.208 20.3289 155.733 20.8596 154.79 cv20.9597 154.612 21.3845 153.475 22.1208 151.372 cv26.2205 151.425 ln25.9055 154.089 25.0769 156.346 23.7507 158.206 cv22.2039 160.376 20.2634 161.466 17.9148 161.466 cv16.1638 161.466 14.7429 161.063 13.6565 160.257 cv12.2898 159.241 11.6077 157.663 11.6077 155.526 cv11.6077 154.194 11.7297 152.538 11.9749 150.558 cv12.2205 148.578 12.4836 146.484 12.7634 144.276 cv12.7634 141.753 13.4817 139.633 14.9187 137.916 cv16.1804 136.409 17.8445 135.656 19.9128 135.656 cv20.8596 135.656 21.6384 135.717 22.2527 135.84 cv22.8645 135.962 23.5227 136.216 24.2229 136.602 cv25.0647 135.551 ln28.9548 135.498 lnf93.1917 136.549 mo92.5955 136.234 91.7029 135.989 90.5105 135.813 cv78.9465 135.813 ln78.1565 140.807 ln78.5427 140.807 78.8665 140.955 79.1296 141.254 cv79.3928 141.551 79.5247 142.034 79.5247 142.699 cv79.5247 142.839 79.5076 143.158 79.4187 143.645 cv77.2634 155.577 ln77.0886 155.823 76.9304 155.981 76.7908 156.052 cv76.3699 156.331 75.8098 156.472 75.1086 156.472 cv74.0569 161.466 ln84.1506 161.466 ln84.8855 156.524 ln84.4656 156.454 84.1677 156.384 83.9929 156.313 cv83.4666 155.999 83.2556 155.452 83.4148 154.684 cv84.4656 149.585 ln84.7107 149.585 85.0789 149.585 85.5696 149.585 cv86.1995 149.585 86.6819 149.69 87.0149 149.901 cv87.3479 150.11 87.5149 150.55 87.5149 151.215 cv87.5149 151.284 87.5149 151.407 87.5149 151.583 cv87.5149 151.688 87.4875 151.827 87.4617 152.004 cv86.3577 159.626 ln86.2717 160.225 86.3665 160.678 86.6995 160.993 cv87.0325 161.308 87.5496 161.473 88.2507 161.466 cv93.4548 161.413 ln94.0857 156.419 ln93.5247 156.174 93.1917 155.964 93.0867 155.788 cv92.9817 155.614 92.9597 155.331 93.0334 154.948 cv93.1697 154.245 93.3147 153.528 93.4548 152.792 cv93.5945 152.056 93.6648 151.425 93.6648 150.899 cv93.6648 150.198 93.4895 149.708 93.1384 149.428 cv92.9646 149.323 92.8069 149.2 92.6658 149.06 cv92.5256 148.954 92.4558 148.85 92.4558 148.744 cv92.4558 148.464 92.8679 148 93.6917 147.351 cv94.5149 146.703 95.0837 145.906 95.3997 144.958 cv95.7146 144.014 95.8728 142.787 95.8728 141.28 cv95.8728 139.072 94.9788 137.496 93.1917 136.549 cvcp88.8816 142.699 mo88.8816 142.805 88.8635 142.927 88.8289 143.067 cv88.5657 144.907 ln88.4407 145.786 87.7415 146.221 86.5159 146.221 cv85.8499 146.221 85.2898 146.186 84.8337 146.116 cv85.6746 141.07 ln85.9895 141.07 86.4626 141.036 87.0945 141.017 cv87.6545 141 88.0925 141.114 88.4075 141.306 cv88.7229 141.499 88.8816 141.875 88.8816 142.436 cv88.8816 142.471 88.8816 142.559 88.8816 142.699 cvf69.0105 136.549 mo68.4158 136.234 67.5217 135.989 66.3298 135.813 cv54.7649 135.813 ln53.9768 140.807 ln54.3616 140.807 54.6858 140.955 54.9485 141.254 cv55.2117 141.551 55.3435 142.034 55.3435 142.699 cv55.3435 142.839 55.3254 143.158 55.2375 143.645 cv53.0828 155.577 ln52.9075 155.823 52.7507 155.981 52.6096 156.052 cv52.1897 156.331 51.6287 156.472 50.9275 156.472 cv49.8767 161.466 ln59.9695 161.466 ln60.7048 156.524 ln60.2849 156.454 59.9866 156.384 59.8118 156.313 cv59.2859 155.999 59.0745 155.452 59.2336 154.684 cv60.2849 149.585 ln60.5295 149.585 60.8977 149.585 61.3884 149.585 cv62.0198 149.585 62.5017 149.69 62.8347 149.901 cv63.1677 150.11 63.3337 150.55 63.3337 151.215 cv63.3337 151.284 63.3337 151.407 63.3337 151.583 cv63.3337 151.688 63.3054 151.827 63.2805 152.004 cv62.1765 159.626 ln62.0906 160.225 62.1858 160.678 62.5188 160.993 cv62.8518 161.308 63.3689 161.473 64.0696 161.466 cv69.2737 161.413 ln69.9045 156.419 ln69.3435 156.174 69.0105 155.964 68.9055 155.788 cv68.8005 155.614 68.7795 155.331 68.8538 154.948 cv68.9885 154.245 69.1335 153.528 69.2737 152.792 cv69.4138 152.056 69.4836 151.425 69.4836 150.899 cv69.4836 150.198 69.3088 149.708 68.9587 149.428 cv68.7825 149.323 68.6257 149.2 68.4856 149.06 cv68.3445 148.954 68.2747 148.85 68.2747 148.744 cv68.2747 148.464 68.6868 148 69.5105 147.351 cv70.3337 146.703 70.9036 145.906 71.2195 144.958 cv71.5334 144.014 71.6926 142.787 71.6926 141.28 cv71.6926 139.072 70.7986 137.496 69.0105 136.549 cvcp64.7004 142.699 mo64.7004 142.805 64.6829 142.927 64.6477 143.067 cv64.3845 144.907 ln64.2595 145.786 63.5618 146.221 62.3347 146.221 cv61.6697 146.221 61.1086 146.186 60.6526 146.116 cv61.4939 141.07 ln61.8088 141.07 62.2805 141.036 62.9138 141.017 cv63.4729 141 63.9119 141.114 64.2278 141.306 cv64.5427 141.499 64.7004 141.875 64.7004 142.436 cv64.7004 142.471 64.7004 142.559 64.7004 142.699 cvf47.2478 137.68 mo45.9866 136.471 44.4426 135.791 42.6218 135.603 cv42.4099 135.581 42.0789 135.551 41.6238 135.551 cv39.4495 135.551 37.6365 136.199 36.1829 137.496 cv34.7278 138.792 33.7249 140.515 33.3699 142.699 cv31.4255 154.684 ln31.3455 155.174 31.3206 155.526 31.3206 155.735 cv31.3206 157.489 31.9675 158.864 33.2649 159.862 cv34.5618 160.862 36.1736 161.36 38.1018 161.36 cv40.6248 161.36 42.6487 160.8 44.1726 159.679 cv45.6965 158.557 46.7195 157.063 47.0378 155.157 cv49.0876 142.857 ln49.1165 142.681 49.1399 142.436 49.1399 142.121 cv49.1399 140.369 48.5085 138.889 47.2478 137.68 cvcp43.1477 144.434 mo41.5706 153.265 ln41.4216 154.1 41.1858 154.79 40.7297 155.315 cv40.2737 155.841 39.7156 155.991 39.0476 155.788 cv38.1038 155.501 37.6277 154.877 37.6277 153.896 cv37.6277 153.37 37.6775 152.952 37.7336 152.634 cv39.3625 143.33 ln39.6775 142.314 40.0027 141.639 40.3357 141.306 cv40.6687 140.974 41.1677 140.807 41.8337 140.807 cv42.8499 140.982 43.3577 141.613 43.3577 142.699 cv43.3577 143.295 43.2488 143.865 43.1477 144.434 cvf129.779 151.741 mo133.72 151.741 ln131.672 161.466 ln114.167 161.466 ln115.218 156.472 ln115.919 156.472 116.479 156.331 116.9 156.052 cv117.04 155.981 117.198 155.823 117.373 155.577 cv119.791 142.646 ln119.948 141.809 119.707 141.237 119.108 140.965 cv118.936 140.887 118.6 140.843 118.109 140.807 cv118.844 135.866 ln136.403 135.866 ln135.036 144.381 ln131.407 144.381 ln131.444 144.171 131.461 143.873 131.461 143.488 cv131.461 142.507 131.304 141.734 130.988 141.175 cv130.57 140.437 129.937 140.072 129.094 140.072 cv128.36 140.072 127.698 140.269 127.098 140.649 cv126.26 141.181 125.775 141.832 125.653 142.621 cv125.53 143.409 125.388 144.215 125.232 145.038 cv125.073 145.862 125.012 146.379 125.048 146.589 cv125.118 146.729 125.416 146.852 125.941 146.957 cv126.292 146.992 126.569 146.832 126.781 146.484 cv127.129 145.921 127.413 144.872 127.624 143.33 cv129.674 143.33 ln128.096 153.317 ln125.836 153.317 ln126.152 151.478 ln126.182 151.302 126.204 151.075 126.204 150.794 cv126.204 150.374 126.116 150.05 125.941 149.821 cv125.766 149.595 125.45 149.479 124.995 149.479 cv124.785 149.479 124.61 149.515 124.469 149.585 cv124.329 149.62 124.156 150.34 123.944 151.741 cv123.875 152.196 123.813 152.899 123.68 153.844 cv123.568 154.653 123.716 155.35 124.207 155.946 cv124.698 156.542 125.293 156.84 125.994 156.84 cv127.151 156.84 128.008 156.401 128.57 155.526 cv128.954 154.929 129.359 153.668 129.779 151.741 cvf176.564 151.741 mo180.507 151.741 ln178.456 161.466 ln160.95 161.466 ln162.003 156.472 ln162.704 156.472 163.263 156.331 163.685 156.052 cv163.824 155.981 163.983 155.823 164.157 155.577 cv166.575 142.646 ln166.733 141.809 166.491 141.237 165.893 140.965 cv165.72 140.887 165.385 140.843 164.894 140.807 cv165.63 135.866 ln183.187 135.866 ln181.821 144.381 ln178.194 144.381 ln178.229 144.171 178.246 143.873 178.246 143.488 cv178.246 142.507 178.091 141.734 177.773 141.175 cv177.354 140.437 176.72 140.072 175.881 140.072 cv175.145 140.072 174.482 140.269 173.883 140.649 cv173.045 141.181 172.56 141.832 172.437 142.621 cv172.315 143.409 172.175 144.215 172.016 145.038 cv171.859 145.862 171.798 146.379 171.833 146.589 cv171.903 146.729 172.2 146.852 172.727 146.957 cv173.077 146.992 173.354 146.832 173.568 146.484 cv173.914 145.921 174.198 144.872 174.407 143.33 cv176.459 143.33 ln174.882 153.317 ln172.621 153.317 ln172.937 151.478 ln172.967 151.302 172.989 151.075 172.989 150.794 cv172.989 150.374 172.902 150.05 172.727 149.821 cv172.551 149.595 172.236 149.479 171.78 149.479 cv171.57 149.479 171.395 149.515 171.255 149.585 cv171.114 149.62 170.941 150.34 170.729 151.741 cv170.66 152.196 170.598 152.899 170.466 153.844 cv170.353 154.653 170.501 155.35 170.991 155.946 cv171.483 156.542 172.078 156.84 172.779 156.84 cv173.935 156.84 174.792 156.401 175.355 155.526 cv175.739 154.929 176.143 153.668 176.564 151.741 cvf155.8 136.549 mo155.204 136.234 154.311 135.989 153.119 135.813 cv141.553 135.813 ln140.766 140.807 ln141.151 140.807 141.475 140.955 141.738 141.254 cv142.001 141.551 142.133 142.034 142.133 142.699 cv142.133 142.839 142.115 143.158 142.028 143.645 cv139.872 155.577 ln139.697 155.823 139.539 155.981 139.399 156.052 cv138.978 156.331 138.418 156.472 137.717 156.472 cv136.665 161.466 ln146.758 161.466 ln147.494 156.524 ln147.073 156.454 146.776 156.384 146.601 156.313 cv146.074 155.999 145.864 155.452 146.022 154.684 cv147.073 149.585 ln147.319 149.585 147.687 149.585 148.177 149.585 cv148.808 149.585 149.29 149.69 149.623 149.901 cv149.956 150.11 150.123 150.55 150.123 151.215 cv150.123 151.284 150.123 151.407 150.123 151.583 cv150.123 151.688 150.094 151.827 150.07 152.004 cv148.967 159.626 ln148.879 160.225 148.975 160.678 149.308 160.993 cv149.641 161.308 150.157 161.473 150.859 161.466 cv156.063 161.413 ln156.694 156.419 ln156.133 156.174 155.8 155.964 155.695 155.788 cv155.59 155.614 155.568 155.331 155.642 154.948 cv155.778 154.245 155.923 153.528 156.063 152.792 cv156.203 152.056 156.273 151.425 156.273 150.899 cv156.273 150.198 156.098 149.708 155.747 149.428 cv155.573 149.323 155.415 149.2 155.275 149.06 cv155.134 148.954 155.064 148.85 155.064 148.744 cv155.064 148.464 155.476 148 156.3 147.351 cv157.123 146.703 157.692 145.906 158.008 144.958 cv158.323 144.014 158.48 142.787 158.48 141.28 cv158.48 139.072 157.587 137.496 155.8 136.549 cvcp151.49 142.699 mo151.49 142.805 151.471 142.927 151.437 143.067 cv151.174 144.907 ln151.048 145.786 150.351 146.221 149.124 146.221 cv148.458 146.221 147.898 146.186 147.442 146.116 cv148.282 141.07 ln148.598 141.07 149.07 141.036 149.702 141.017 cv150.261 141 150.7 141.114 151.016 141.306 cv151.332 141.499 151.49 141.875 151.49 142.436 cv151.49 142.471 151.49 142.559 151.49 142.699 cvf278.65 152.319 mo276.6 162.044 ln259.882 162.044 ln260.935 157.05 ln261.671 157.05 262.249 156.909 262.669 156.63 cv262.81 156.559 262.966 156.401 263.142 156.157 cv265.823 143.225 ln265.995 142.39 265.74 141.815 265.14 141.543 cv264.968 141.465 264.632 141.42 264.141 141.385 cv264.876 136.444 ln275.179 136.444 ln274.128 141.437 ln273.253 141.368 272.604 141.543 272.184 141.963 cv272.114 142.033 272.026 142.156 271.921 142.331 cv269.398 154.422 ln269.311 154.839 269.292 155.14 269.292 155.315 cv269.292 156.717 269.835 157.418 270.923 157.418 cv272.079 157.418 272.936 156.979 273.497 156.104 cv273.882 155.507 274.286 154.247 274.706 152.319 cv278.65 152.319 lnf258.042 152.319 mo255.993 162.044 ln239.277 162.044 ln240.327 157.05 ln241.065 157.05 241.643 156.909 242.062 156.63 cv242.202 156.559 242.361 156.401 242.536 156.157 cv245.216 143.225 ln245.39 142.39 245.132 141.815 244.532 141.543 cv244.362 141.465 244.025 141.42 243.534 141.385 cv244.271 136.444 ln254.573 136.444 ln253.522 141.437 ln252.646 141.368 251.997 141.543 251.577 141.963 cv251.507 142.033 251.419 142.156 251.315 142.331 cv248.79 154.422 ln248.704 154.839 248.686 155.14 248.686 155.315 cv248.686 156.717 249.229 157.418 250.316 157.418 cv251.472 157.418 252.329 156.979 252.891 156.104 cv253.276 155.507 253.679 154.247 254.1 152.319 cv258.042 152.319 lnf238.698 136.444 mo237.384 144.958 ln233.757 144.958 ln233.757 143.277 233.565 142.139 233.179 141.543 cv232.794 140.947 232.216 140.649 231.445 140.649 cv230.708 140.649 230.046 140.847 229.447 141.227 cv228.609 141.759 228.124 142.41 228.001 143.199 cv227.878 143.987 227.739 144.793 227.579 145.617 cv227.423 146.44 227.355 146.958 227.397 147.167 cv227.425 147.309 227.727 147.446 228.29 147.535 cv228.603 147.586 228.87 147.414 229.079 147.062 cv229.431 146.468 229.727 145.415 229.972 143.908 cv232.023 143.908 ln230.446 153.896 ln228.185 153.896 ln228.499 152.056 ln228.525 151.913 228.552 151.706 228.552 151.425 cv228.552 150.829 228.404 150.452 228.106 150.295 cv227.808 150.137 227.554 150.058 227.343 150.058 cv227.134 150.058 226.958 150.094 226.819 150.163 cv226.677 150.198 226.503 150.918 226.292 152.319 cv226.223 152.774 226.128 153.478 225.977 154.422 cv225.848 155.229 226.011 155.929 226.503 156.524 cv226.993 157.12 227.589 157.418 228.29 157.418 cv229.692 157.418 230.667 156.749 231.234 155.421 cv231.474 154.858 231.777 153.825 232.128 152.319 cv236.071 152.319 ln233.968 162.044 ln216.462 162.044 ln217.513 157.05 ln218.249 157.05 218.827 156.909 219.249 156.63 cv219.388 156.559 219.546 156.401 219.722 156.157 cv222.087 143.225 ln222.24 142.387 222.003 141.815 221.404 141.543 cv221.232 141.465 220.913 141.42 220.458 141.385 cv221.194 136.444 ln238.698 136.444 lnf213.729 138.284 mo212.675 137.058 210.907 136.444 208.42 136.444 cv198.17 136.444 ln197.433 141.385 ln197.888 141.42 198.208 141.465 198.38 141.543 cv198.979 141.815 199.216 142.387 199.063 143.225 cv196.698 156.157 ln196.522 156.401 196.365 156.559 196.224 156.63 cv195.803 156.909 195.225 157.05 194.49 157.05 cv193.438 162.044 ln203.688 162.044 ln205.825 162.044 207.705 161.524 209.313 160.467 cv211.28 159.176 212.468 157.184 212.993 154.526 cv214.781 145.485 ln214.816 145.135 214.868 144.714 214.938 144.224 cv215.009 143.733 215.042 143.225 215.042 142.699 cv215.042 140.772 214.603 139.301 213.729 138.284 cvcp208.787 145.275 mo207.105 153.159 ln206.848 154.366 206.44 155.219 206.053 155.762 cv205.668 156.306 205.108 156.489 204.372 156.313 cv203.426 155.999 202.953 155.28 202.953 154.159 cv202.953 153.774 203.012 153.337 203.11 152.845 cv204.793 144.328 ln205.203 142.252 206.126 141.344 207.421 141.595 cv208.473 141.799 208.998 142.471 208.998 143.593 cv208.998 144.119 208.915 144.676 208.787 145.275 cvf302.778 156.944 mo302.253 156.909 301.776 156.329 301.569 155.157 cv298.257 136.339 ln292.948 136.392 ln283.486 156.157 ln283.345 156.366 283.206 156.507 283.066 156.577 cv282.61 156.892 282.031 157.05 281.331 157.05 cv280.28 162.044 ln290.214 162.044 ln290.949 157.103 ln290.53 157.067 290.214 157.013 290.003 156.944 cv289.339 156.731 289.005 156.366 289.005 155.841 cv289.005 155.735 289.04 155.543 289.111 155.263 cv289.845 153.265 ln294.683 153.265 ln295.208 155.526 ln295.103 155.876 295.005 156.144 294.893 156.313 cv294.516 156.881 293.964 157.155 293.263 157.155 cv292.475 161.938 ln303.198 161.938 ln303.934 156.997 ln303.69 156.997 303.302 156.979 302.778 156.944 cvcp291.318 149.901 mo293.421 144.644 ln294.156 150.006 ln291.318 149.901 lnf360.655 136.129 mo359.341 144.644 ln355.712 144.644 ln355.749 144.294 355.766 144.031 355.766 143.855 cv355.766 142.875 355.612 142.083 355.294 141.49 cv354.876 140.717 354.241 140.333 353.401 140.333 cv352.384 140.333 351.577 140.632 350.983 141.227 cv350.386 141.823 350.044 142.428 349.958 143.041 cv349.87 143.654 349.738 144.39 349.563 145.248 cv349.388 146.107 349.321 146.642 349.352 146.852 cv349.391 147.098 349.704 147.22 350.298 147.22 cv350.684 147.22 351.007 146.887 351.272 146.221 cv351.534 145.556 351.753 144.679 351.929 143.593 cv353.979 143.593 ln352.402 153.581 ln350.141 153.581 ln350.456 151.741 ln350.482 151.598 350.509 151.39 350.509 151.11 cv350.509 150.515 350.361 150.137 350.063 149.979 cv349.763 149.821 349.509 149.743 349.3 149.743 cv349.089 149.743 348.915 149.778 348.775 149.848 cv348.634 149.919 348.458 150.637 348.249 152.004 cv348.179 152.458 348.085 153.161 347.934 154.106 cv347.804 154.915 347.968 155.614 348.458 156.208 cv348.949 156.805 349.546 157.103 350.247 157.103 cv351.648 157.103 352.624 156.435 353.19 155.104 cv353.429 154.542 353.733 153.511 354.083 152.004 cv358.027 152.004 ln355.923 161.729 ln338.419 161.729 ln339.47 156.735 ln340.206 156.735 340.784 156.595 341.204 156.313 cv341.345 156.243 341.503 156.086 341.677 155.841 cv344.044 142.91 ln344.191 142.105 343.958 141.553 343.36 141.28 cv343.188 141.202 342.87 141.14 342.413 141.07 cv343.149 136.129 ln360.655 136.129 lnf380.472 136.865 mo379.876 136.549 378.984 136.304 377.792 136.129 cv366.175 136.129 ln365.386 141.07 ln365.771 141.07 366.095 141.219 366.359 141.516 cv366.62 141.814 366.753 142.297 366.753 142.962 cv366.753 143.137 366.734 143.473 366.648 143.961 cv364.544 155.841 ln364.37 156.086 364.212 156.243 364.072 156.313 cv363.652 156.595 363.073 156.735 362.337 156.735 cv361.286 161.729 ln371.378 161.729 ln372.115 156.786 ln371.693 156.717 371.396 156.647 371.22 156.577 cv370.695 156.297 370.478 155.747 370.642 154.948 cv371.693 149.848 ln371.939 149.848 372.307 149.848 372.798 149.848 cv373.427 149.848 373.911 149.962 374.243 150.19 cv374.575 150.418 374.743 150.864 374.743 151.53 cv374.743 151.6 374.743 151.723 374.743 151.899 cv374.743 152.004 374.716 152.142 374.69 152.319 cv373.585 159.942 ln373.505 160.501 373.656 160.956 374.007 161.308 cv374.357 161.659 374.847 161.799 375.478 161.729 cv380.683 161.729 ln381.313 156.735 ln380.929 156.559 380.648 156.384 380.472 156.208 cv380.298 156.034 380.243 155.7 380.315 155.21 cv380.417 154.509 380.542 153.774 380.683 153.003 cv380.823 152.231 380.894 151.653 380.894 151.268 cv380.894 150.532 380.718 150.006 380.368 149.69 cv380.192 149.585 380.034 149.479 379.895 149.374 cv379.753 149.271 379.684 149.147 379.684 149.007 cv379.684 148.762 380.095 148.315 380.919 147.667 cv381.741 147.019 382.322 146.195 382.654 145.196 cv382.987 144.197 383.153 142.997 383.153 141.595 cv383.153 139.387 382.259 137.811 380.472 136.865 cvcp376.057 143.383 mo375.847 145.17 ln375.739 146.085 375.005 146.536 373.743 146.536 cv373.499 146.536 373.218 146.528 372.903 146.51 cv372.587 146.493 372.323 146.467 372.115 146.431 cv372.903 141.332 ln373.184 141.332 373.62 141.297 374.216 141.28 cv374.847 141.262 375.321 141.376 375.636 141.569 cv375.952 141.762 376.11 142.139 376.11 142.699 cv376.11 142.979 376.077 143.205 376.057 143.383 cvf407.491 156.63 mo406.968 156.595 406.49 156.014 406.284 154.843 cv402.97 136.023 ln397.661 136.076 ln388.199 155.841 ln388.06 156.052 387.919 156.192 387.78 156.262 cv387.323 156.577 386.745 156.735 386.044 156.735 cv384.993 161.729 ln394.929 161.729 ln395.663 156.786 ln395.243 156.752 394.929 156.698 394.718 156.63 cv394.054 156.417 393.72 156.052 393.72 155.526 cv393.72 155.421 393.755 155.228 393.823 154.948 cv394.561 152.95 ln399.397 152.95 ln399.923 155.21 ln399.818 155.562 399.72 155.829 399.608 155.999 cv399.229 156.565 398.677 156.84 397.978 156.84 cv397.189 161.622 ln407.913 161.622 ln408.649 156.682 ln408.404 156.682 408.018 156.665 407.491 156.63 cvcp396.032 149.638 mo398.136 144.328 ln398.87 149.69 ln396.032 149.638 lnf322.333 151.372 mo318.234 151.372 ln316.497 161.571 ln320.757 161.571 ln321.491 159.362 ln322.368 160.239 323.315 160.862 324.331 161.229 cv325.347 161.598 326.538 161.782 327.905 161.782 cv330.253 161.782 332.04 161.247 333.267 160.178 cv334.493 159.108 335.337 157.54 335.79 155.473 cv335.897 154.983 335.948 154.509 335.948 154.054 cv335.948 152.547 335.478 151.124 334.529 149.796 cv333.726 148.672 332.78 147.828 331.69 147.273 cv330.921 146.882 330.286 146.577 329.796 146.326 cv328.919 145.875 328.097 145.424 327.327 144.986 cv326.556 144.548 326.048 144.189 325.802 143.908 cv325.557 143.628 325.435 143.312 325.435 142.962 cv325.435 142.752 325.499 142.547 325.593 142.331 cv326.025 141.32 326.89 140.807 328.22 140.807 cv328.816 140.807 329.298 140.914 329.693 141.07 cv331.437 141.756 332.321 143.067 332.321 145.065 cv336.316 145.065 ln337.261 135.866 ln333.372 135.813 ln333.057 137.496 ln331.901 136.76 330.919 136.243 330.113 135.945 cv329.307 135.647 328.29 135.498 327.064 135.498 cv325.031 135.498 323.323 135.962 321.939 136.891 cv320.554 137.82 319.718 139.25 319.39 141.175 cv319.3 141.703 319.232 142.208 319.232 142.699 cv319.232 144.592 320.059 146.252 321.702 147.693 cv322.337 148.25 323.079 148.76 323.962 149.165 cv325.218 149.741 326.518 150.253 327.8 150.847 cv328.483 151.163 328.983 151.592 329.351 152.03 cv329.718 152.468 329.903 153.003 329.903 153.633 cv329.903 154.194 329.718 154.825 329.351 155.526 cv328.983 156.228 328.325 156.577 327.38 156.577 cv326.153 156.577 324.993 156.089 323.911 155.104 cv322.716 154.022 322.194 152.774 322.333 151.372 cvfgrestoregrestoreAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailerAdobe_AGM_Core/page_trailer get exec%%TrailerAdobe_AGM_Core/doc_trailer get exec%%EOFgsave userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse grestore showpage%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 9.0%%For: (                   ) ()%%Title: (Corriere della Sera LOGO.eps)%%CreationDate: 9-06-2005 15:53%AI9_DataStream%GatUYlZ/i2Z/$)_*VLRT8P)J3IaRt&e&Nhn.=5OWM,Q$nMWS_HN-La73VK_M5.suU52bHBa^_5Z%l`(Z*KBJVG6@`+:O`<<ro*83%_fn=pr6I#+kG]LhmY=p)+d[HIaX@,ep:&**=*_qWCTSiA71CD2mVn;0Y#7YO8>0BQhRpTf5.nORHFu7%5@6V24[)#YEVT@cp!"#j%f3c:Bp[7JCpf:RCI/bHP^Grli'$nUb_p@1'rqZ?6h=3/=]C=(k^<?h3&IqRYrmt4S=SJ0VfA@Sp>ENalKA!uO]6jSUnoXj$pghp'%38_@6Q^?a]KB7(pb]ECRrSq5q6,%1Xq"FO\CJ:#CcpeIBff-[Y]fZ5an`g&LjcD-O7IC!@T;D!`*;E[q0->*"hS24fOkDe0jj9Uh%7K%t5^HTBE8Gt;F?<Y,AlMpcsSRk+S^JFn)gZ*Le1?QVAI3ohCEjWN`O705_*c<&AUaF@c.;%uaa)A0=hn<\n%PsH!I/3-EJc=dP%J7fWI#:G#ns8&?GgFfd))`I[Wp\<XiH27i>Kouq&/\QH$$a^Q=qr/)7bI>=YqigmHhl#Zak3mN7qfd8901SoUkk-,A;K23qo%A'+%U*rb!,aGi+PVnFh^RR]>r6+KtY?r9`]"Y_'G^4]9?75<gm>Wacc^nIW^AY[FTb"j++2ra,rpKRRqhNoB?)sTGfsTa>O)L)'d^-(J%0CQ'KT'MX1?d8)Pl_j330A%LnmkOiL*1F4;If99FlM>G>VqJk(hAm\ep\;MUht()-C@<'qm:<Cmk=Rc,g($F#Y9%.[(=0!L-)b;&%?"Hae#jM<Ml1VaDLG*JL86#,K2qRMY:VT'L]R4_eAbfgqjHa>aSULO'FC,B#:]PG`lBIh=j6?:)6I"oEllYl`U+QE6j8V/2R4m6i%&%VlBrSd/*j#n/MG0)*r(Rfi8%<;.;SUS%rju:`Dqfb(lVSDs"UZ@_@Ps1`:qOK7OetJ&\$eZL1a1Jt<_tDperr20Hp9V*W^``j-%(B2G#r]0l:S+lLR8ZI:8)jC:h55nmis*@4kY7?'[P<6E'reKCRT39M=8?p#^8Sp?2'Jj"]as$Gn$;mG>="^#Ocui"\8l1"7oAQnD%+h:J3rCA5+j]2jG>bpHWJKSajV]-<TX7'AG[$4.W2WR3!1oWm/I$CR@<5q_T2VK=i)FpLS3TPN.*Sb7^.Fu.TGO+Y^c5JSJC`,`M%=i8\>%h*hE-i@TkR[JAJjZcsVUYGNc0%s?H1qjE-PY#XT36uL"h+8.3P`9hlk\Ri,]3BF(46!gnWNiHSZlA\.&9fm2<bUA(VT-3-%6?C+)@MhfO@-LO%p2ARCN>S$$CV07algX6>NhW;eIMMWd/F@>6qr.!UL-6B-B'4?nh<7-\]7"lNZ#(dWj0O61d%3"8]%t*@bIY/a%4eC+_$I-eia)_j\7r#+X=(O>[8Xo*X\d!B2ojkhfgHlOsZB<(=M?*YoKkBIQO#N50C+Sl*j/p5&q`DC$0o4XPm!&=f`r5CN1W(8m%6F1aFmVX;DRGGThEuWAq[$=(]Ht?*Dq[MEuP1]6"dF=][;/#ZAo_A/ns/to);H9RR#Nb(/h;_ia6qllQd<:/dX3?pNLK+:"d5WVd%+.qYb!b"#;>nW=dC+1l+ibqdAL7CuQq>i\pWf_5@I(pu(XS3`b?*)E:+>TY#n,qgJ?1\bm!G*]Y[d#ic=?GbICJ]sm,Xe\,5EP><%48)Z[$8(($c>P]Gk:2ak*)q.Z6$\"AM<Vm49mm!aolO($I$a2&Rcp[_H/oXn:6HbHIM$2c0WJ$]FGL+3K_3<ja3Nr"W\hP^er1g(%"Y71MiA)8=3LJh$a2_p>&li2J;f"FV$N20V/7"P*-qVEV0jUL:E9`fbRDn#\+()A)Xlu.:&iS;I5UN'[>1&]j[YjmK=fkg.kaWBV%rEKOAAHuX[EZWjB8m4K(P&5P=$Bkat@aT8inK@!.cp:/LgdWR>1?k.Y#"Qm8S(<d?@T_AcOAr$`D?R@)8]82M"dcsKOhK<o\PgBn%p0JE\L9#>_O;UY6M`u('%F#F//uulP"PC^B'hgfP*\s.kVGSg"X%toU;Hc`/bEdM@fBg4i/P,Va_"j6c$g2T]V+Fkrmq4C]ZkOJE%l)r*$8)'P:58qr4*hreJ=%=u<NBpdS?2.[a@4TrBSUHB;D6N9t/B*p(c>g7ZUTmb#80qK!(TlDk&<LasKn`116"U?8e1Y:M-Il^^%'/;it0l@/^Yj)GG5cfX3e'14I-OZtO'=Kf89G-TY(#AQSKYbdunXq`VUMO2[.!oG3$4+HQ<8ODuTF/-fob74!UqNd8jGTjbD=k)[%2(^pL.-&`B>d[Gf[WT$uoP<j8.(]+nj`TVhfu>o&Jh/]i5UcMY8bib_PULpZ'ZQMC,pGu!B8Ch"?<c5X>;BmKOh,43AW7IbKWXOL%FaIoX^)u1<dT`n>Jt8s@PfXgFb(+N[I"\<0.';^U^gt9TBEFG,D^]T*D(F.+Kp9\io2.!Bgek0q9&SJ"eJa=BmO?8`fWL,?bM-e@%.B:J9UR`_W;fA&o''cp%3p4^b2nB;gLs)*jEqg?.:-k&g_5,5d;:j"VMNa^7/OQTY>'0)g8&unsD8hK1=Bb:&(9o9nT%1o-TlZeP%7&3Er"a7kN3]ST8KjUN'/!X_+Brc51Vhj5qo<0XoEQ'!7c?m]_j*bJP+87!++qkV4.[hp%o$k1+=RreVJ.,-K/\bZ2LSo<Mig)N*%*F[.rlOKp(NkApNb%rXrb_L&1Pel%99kP;9Yp!F%YZ<IF(';sY?r?&V47E'(Cu]<7'=S\uktQrh&<U0SY\C4*"AD5$EVjEs>h^?-%O8b-u]+KDnmA7Op4\H_+V7P)]8pfP2nmAA7=#0JNo[d/2)C<j1mj,`sWdVK4fftc*;qTKj-B4sC8=<H0G@W+sR<0;3<X'X).RM"n%CZH#$VTBe^2/:m3J*GQTY7J#(Yca%k/2.s2W5,TZ)YN^54Gq(b?sIH;X!:k1UZGA"YP%ag@V^.7^G#MblCUn4l>+XXY8FgdUtnct%Ei'R'8l=F17+/90:1UB7<ou>\2VM"r].f,F*W0R\?=,GV4oZ!2Zeb=eSdTXBMp0m5f$3HMXP;(Tk';3YA4P`e3PVchK0lsu1:8_Y%2=DgUCOtbPH0Rj:2e8O"'%-/Yl"a.b=%QR35rq&L_RgKSdm6eSRkrRh,)at#7'U0'PVCHa1Q<i?^?)lE^#3F3C"!Ps`//0g&bWK=%V2g\HG(s===>.?/[Q7s-6XJKOZn[uBqe;YTJ$%b]GfJr3f)5-imJZS:p?(nOZh]a/-.1^f4Sr3]5:B7c7NF2HYc@4bD*7f:C?mTC%gF'0U)CJSkQ2ZP9g&4fhX(p5"25n]j5[>1golQTaq%L-<G*/!(UIImkFWs%"gg^01BOR3sm>OuD@sbdek!<#@>0jEBBj6lq(Y+9n%Wio$JM^Af%8/3+$Rjlc8@AN'@MDVVu\g253Mo4'V811BfL<,&-8Qtn\lWrac_rU`R&PL)`%X=8%&XT"WIR'V_6s%(gp)I=$8I?W<%dVZ0;,gssA%gFC4WL]hR84Op!%?diU99Dr>$;@i(A;4*\kS+IsoGO!ioV2&,RZu9.[Zcb<`LE+*-me_R,hT"6o;[nBXpUtT/YSu8%DeViP9jF:;<744*%h]c%O^$m,:HP>[/\O!N@Fcf/K3]QhH6(Ojft^%Pq(/94,eZn-^rG_5*R1L0R\&h$TWs0u<UYX3:=9LbCmYfl%*!]tLq'<Y:g4h%2b+BAG4%V'C4Kq-@U5_T<dRec<0cO_/9'RfWkEGPD,6qa`FtBiakE5B^Kt6k(ZS;(a^`IIa:AEja;D'=('bgu9%'p_,8f^:M!X]0/ID98Vi"54Rp=DI[tHK?"HZWTo)0WI[tV:V-l0O5)h)cB<V8Znpg^qb'2.E$V!9m`%0W+Nq<=[c?QFIHNlF+]F#%;jI_%%IA4`h#eU.q]p`Tb7^AAQb>;]NG$>K0XQ:t?CAmMCu=",%^ob:iuo;[e\"JEOd+'=Gi<73l`DkPahj'[&Z*PreUTP/5lHr;%A^MaNBj0d;>-p$e'>?%*Pmk\n0[Efl).dSEirbJIQqnQiO:sV*8NM]Kl*Q]bF3naM!M4OC-)"DL_6Nl\VTr<I:_r1i8iTD#C>&Lr%4Tc@\W^V9l>rtag#tADc!u!+jRdAcKA?W&-D4e8s!o"T[^PG2@Q-$&*pldNC6m[n.-58*Eg+sL'knY..jWGL,(_#J8e[d]K:Y5?M%D\<#TIFP3hY/^?g/`pWEG-$HKdAV"UrMYU_)>)mKJAlSs<dpF$hOCC9CcEO)G)b;%N-?4>/Z.a@&skg_VXoSrV[q?/poJtE1"'8R%fr.%<1BNh>7o+W9\ttH\FfBG\;;$Anog/;Bn=:YEU\jSdIpa2o)1))SjluL7k4\Z@o_A?3/QD6IJC254YKd(cAS??PU.ZLo1S:<#%gT)p`X2q1P'/Ur+)WRD5G_)GC,<fPs?iLcas4u^BY.qT4Jc=d+o_'[XIg'eEnFWT-C#$dRcbE?_'u%&&Er=k^n%'/N$",hl(W=a9%4n@QHXg$"[p=6W54''4RJ\t3Qm$tA/>"ZWBc;TT+o?'4ZVT"$a\@&ZN]Mom%lJPUM:2J2!VKXi$G%.`FcqQ`.%JsT%#%h5&<l<L'%GW!^uQKJ(#TpJWK)[5#eK)$SV-9l=1+("\bSVpba:):NFZXpK^p5Kga`YpG(c15UQFq[_:Ek.+QHeGm=)cBgO]o5N9Y8Wrfc!3K=%d*C?d]:l@%EGK?-[-%&agR?dgf0<NsYsl]V/@usfV&D79^\2:5D]/:#n0;`t,JAi4StH%)*:#gpT^+OmAq'R1h=:=-o3XXCrq1i!%_\ZsXrm;q.s7G"'o3Yk^*tSD=m.7E!n))qA7i&>'\O9iE,Gb-:B0.I8@2;B<#\*eNgU#5`>YF5is)rS\>agqmm%B;NG4-N5n]ga_%;<Eq1Gk:+)%gBtJ43qP$jNYq`K^X_YT#'Q=>f*lJFEi"5"P$TWe45b3S1$4RAfjlfAk(1IR!hBMR2JG#9CIq?i,oW2o-%!+&#sn\%7&kP(o5/Kf)ZDOWHR2=qP3WGA0Z1Z27G9\=mbZ,gs7,aVrnWnOh`f2oj3kua2X54R-@C=<q:#6(mgm0[I(]>M'PAk7If#eI6OrRF%%j7+WK3^>0N1(IL)*H1tYFf-sM_q1-<3%dGJ"jnbl2OPKQe+Rdh`Y8[qu6<O_p*'VhH8?IV,H^)LKe*VrH.(,hf..1h!UY/hqQn(%^O?-0qtP,pO$D1abkTZ3l4i+r+5T2R9WqJ>]BI^NlDK8^p%J)NW:p(oT-,nafl>-p(Y:=l_YcV?C#Pp[h;7)0a7[p=QnCDBZ/P:-%jm,^="t\H"+0V<n*c?48`ugn5Da+oDr"1s(HTE2i4u2T!n(o-DCCVf#+3tj;#QA/WV$$`On*GT)d;8Z-=MB91\pemQGPuW2\G;UN%GPh+'I/A,g`uRAD\PS?!I"rXlo&]iI45P51/C@%dh]AsQdr4*X]R0[!q!Ia\&E)s5okN!hP[iOm]/!_6Kh?j+`7eY3eflA[pn.#Y%mquM3G.>Bm36h8;W;5RQGiW)+GJkX;q=/%jokoEnO,$56YO=`-T[0+Jqfe+I[kGe(lIX"Q^thp;Y11+u7)Ne,Rs5t/]crD7<-S37%10(/8T7)$.q\O-5s4Q?<VjG_`LV9GQ2:(Fs1,9q,$HWRUj0R.HDa^c.9NqDJ]+_m<j"ub_f&Ck6nc%nIDWB9cGe6h'rH6-q=A"!g%p)Y6%\#DVWSA@sc>!"!2@9-"K?D00[&ooGL^/_1'#^Nu%NY_I>H775`ED)X2!p)6]YEl*;%<)WF#hWu5C<[R.k+[Q%%VXUtMt$!_%q[;<7e:b\-8FWFMVU2&(*MJE2PTt)@=nAK;Gh?FP#EVgkdTTB^%]3Ei_D`B#l.cJ>C2!ZWDjmGVcr$a?Yq7-%/E<6J8?\`X`a7nc%i$eqfO=U[(/@]FAI>A^U]^Lu3s."*$f0%#B=:?fSJC=NaY-ai.Y([5,SX1bSW^DGmoIhO"]L^S<\L*OuEg-`=g&T71;GjB=-RT4g%SrOO+4VE9R2#t;8Ql\MqBGY6r=NL<@<tf.'dUlG^+Qj6emS9_DlKjjMkIt9D#eX]Ln6(C@c7sgQ'IGJ3i>D`INi:>>?=Af)7&XLW%0(NOIbctuJEJ/QrBCJG>d%/D;"M0Pi@`haX.u/5ML_>j<V^MdLZla'-cuSV,PV-]&8Je]?$(Qc%*t7,`!GOFd3THH(Y2WuX-?^Ha%7<Hf?oRR'pAEP^pPi9SN3U'e2r[-5M;Qi+bJot<n&1e$@iPIG<&eUIW=ck%(bapJDF0[,X.cU-+3%;F2,_qnS^anG\J]YKV\Ll1S%f&/4q,]rEu"<gnD7YdJmRRIQ"k6]X9$5")#AF%gaN"GBL`6rD^9ZjfOE<RsmJo^r/1P@GLm@5ESBVf9LZl39`lRhC8'1h:k-6C`R%Ee'[E7XT#;P$T9Xjcu:]bokOap9Hq%D#=Kim1mQ$&1JB7:GjfX3TAIb+i#eVo,',I%#HhL]@(.[aHa5T&8d"FM*amTW1d!=$?[uB%>`sqpL4k6_n[U0<o\r_#ad,LZ;*BVDmFalrh6B4uhb$TKSFFK2n\OpcA0DP&f\"gn9u=W-h5U$lNfZE[4Yit%nsC2Jp9<,b)G"8A%Sr$!28I;0Di[9=X(o/m-iF\%tRM^msQ&=5c=J=`+Xe'JFXdpC:CJ=a5&3<_7V8J"g0<>!Or<Qs?T4+Ug3pGg\7=fIWQhM]8IrQg0%2*,dQXId]6Z]o$s7Jdl.L6LO=et.,ir]oS^dTquUQY/W.Z?-`lM%'2Vb@L-r8m]%lVn&g4aPaoIjQ)P(#P_58:igfb)eY<'#Z+u2%OX,<=:&qrQq5B!*8-V=DFn&0,+___7JJ#f*s"f=SKXiPn.1`T^H'k0]R43Y"r]Sp>plI:C_'C[P](d_EZ,M=\;g]fph=j@V9::[M%Wu_7J)1kER;"%NRTi2Mc=g(cm5dB%se4^E1n'\5K6sM@DA^bQA]kTn8Wq=s+5h3]hguW@m6Ro+Q-"I4P[38BM=R1B0Qf_ld=VJ;6%.1e%c0PkP58N,2b@J-<JSND7^Jm_8;eE74C:f/P>n)]]BNLInFGdt=tg@_\GiK^?W!>14GlZG9G%\Q'2!iRO3iUJAT+O]dZ360J=%9#?mf[@g'hR?t5m$/9_5fnCBo.?GSKe/3+]b#Nj;1WA3P5^"EM7TRM^A9!I^RT6I'W"fkXWjnp7l=$GoOc#:95kJ/rRiH2bZ(m!m%i2NLT_lYq"D0#hk)l;LoFfOkkP#3WILBomGq-suo7*O-0YpKHhrW!K9cW[EjE:R5$lE\^?Yg8+V10K$_]G2iTd<QBlHiYRjkZ7b!%B:4jmM?AWIBH9qr(OuRC.>$^4Qk$b]OJ2\r!i#O4(,@kSQH9H%O@\bJGmYVD=Fl@q5W<<h&t[A4`=CG*.R>hdS:?2)V@NEeW_jgH%QR]1pq@4MepPM!KG_:JdARr4_[u`j,E'R,\U&p-[TPC)gPRIO#1f09-#ZnAO.s;As7u/]2P1Lo97a=a=Z9^BP%h!$`ha+);fKt3=%Wom@bM[0m+p.;V<lkiumi;@(5\8ZQoLa7Z4<_oh'C2#"+^_h=VU<^,bOCm[5/W3;T1I._B77>cJ`g/jl#Z#AA`K7$P6$K@WjU<QC%k:1Ubak<$=7Nj0dgo[t$A9tB=M$h0jI9f8C:Do]H)fYI?<Kj!F/>JC6,u=2s#rkBrlk$0+bCoVciTpA0\V)[:rK-2ubYm-,a`DPa%n??En*6mf;blg(nMV"^aJWAsW<Let`BXP%l>h!RQ)&a]VDmpApAU.59I1t_/B;48e[VCt1<\L@+"o1\b3PHUMj%]3m9o;T'M;3C_%ENh;^.[pj%.bN<^YGc][/a$S?G$WoESRjai2?gT=l#@Hif]-#m&Dse2l:u_Z$+7Um2lM!W_G,Cc'RQ7r)l7e"*RYn$15)4c!W:8i%"6hC/hf>=:)rIPm=6Vl:fn;:d=`P/VgVP+K8Z1FCW4k7ohhl</G=`Smg6CGRe>D#%n]b?S[8MI#9JO#S$1JZ`$,2&)?<u@eb,5OS%+hf.biW)+*`2#Bf62+rUij^U9'&TKE&4`#/Uc8@;oT8&LFm+7=iYZkGI7eLdh51V$"`<Nj;hcMZWJs"i_ZQtN\Z@P+2iC9)6\]Lu%HcU/ZPkn9Y)(p81cI-:HE1@+nl-Ns#Eg5'S)30#(aj=QXm\cj[V@9([*\n_=*s@Ds+i=='k\uaE.pt,[670T)7W1mDA2o3PHWt&@%#JetQPMrb:`3KYgn=+;.gOqQ=G0XY+EUmel"=V2i^kDK99SfI?SJ9+YM^pKX3+T%PSr%HWg3?X>@N9!HaM#$=ELca$7h%250M<5J%']U,d`V>*[N5NNmHC\OCK_#^/m].eG;iImk`Am90FOMK``W9W<hG&qRJ@+LFMK)m.V:BI>EEmFYhE5>U9MA@(YfUmQcUt$RbEM9\%A9&ZJ;IWqn\7^cg.`OVf!khB#>1-,/`&Ps@,gn-]Ypq>".5(RCA?\FY@mI<l.E+=6mFY#c^.mGqj"'&PjfSm-pc@@Jj!Tbj(ZPd&%@lIrO@26C=3u<)'K%^f=jZ-X*.10$%m.rj'aDKL`%aHI.mF8?DaCpZ&NZiii#L7=)1,"0BJc2\5,nDVN"[2iTo^pqV'LFU2Oe.eh%+G,CRIF:l2NZD>e=q3WRP1Yf/Y<tJYGnc^U2Oc2#S>+._Z9BJ//Z-0$_FG_dc5'*b"kEDg1_TTA;Uc?l\kpUi,nsC^k:orDG7im1%4Df[:";%-eclt%L!@\4Y$>TF'#PMH$5fMh2=eFua5*.ILqTSbYe;LQqbEU'kY]T7f<?%i%[N%>UE_nB92p4W]OeP-[`H)qdh8+Nl%lo3pn.GAHRc3>C+nb.c0DX(dg'Aat6E_gD%CRiR/in=mPPUlBk#dn>VZbn()3XF$9IT<LoU5LBq<-?S!9B^X=[QFi4A2@:pKr7Ot%mtB\J2>_-c0ir$3R@0/"9aXaYf0Wbd4c$CgXVY'^B"A;D:lF-6F[W-B)=P!1o\TqIQR*U[dfmVa]^"$6g=E=b&??NR#^.d:;PV)>%97"F'OD\^$I&?$:l3L-.eq[rG5"p*%!139Y>[k1RfQG)fBSL(r,X(8j/N"Fn%@AX9$H\uqKkQ[j\eX#54BY581_&%H\gg-Zp%N)n%L),3/d+)8$ZOT&a<.U0GYO<7jp8_(B&?OZ8EE`a2>@/*1l?&LJ\i7L`ZWl3c!^sN_mhN[SETad1_2N?&gT&85pb91BA8/b1DCYa>%D`bFn5eO)#\ZI>%8q":QW])pqf;s:HDeJT;[;M=>(C7;;H>_oR),@6((ACY6>VQKeTR+"Cb#(,MJBY,+kk#5T/cubPZj\a/j00n]%lZOn?JKo$ZN,s:qkoa]<E[%H"+f&NO?j!3`aO"[51lp!/=!mE#5177oX3%%J'A?/@5g*P7[@(T?3&q*q6'$dPaK5TNZUn4S])[!k%BmN=K9j&^jOApfH,'/=P:uDNYJ,jKfU(hkS\Z#aehR?,lU?IBt<gc<NajBT5)\qcgYIYb9d3V7-gtX#"1bCtl?)uKf_4;=J-hK^G%bi,^bBfESGc;Y;'[D9D-T/PI[:OP!h95Mo-;I0)pK>iC27=eXX!E/dL;e\=L*\LC0nIg^GZm:/b@<,b49kn"prMgU*@+Veb.*sN'%3`P>$>iNUU4!I6b39i!/dD[mcr%OMcilra(97p=L=(YWn#cI,!;QChY;$Zf8L#mS?]O%='MKWYERd%m+kQRXeK!+'M&Eh?KR']dg%SK8@fe7\h*lHJdC,!bP&!"/hmM4bV))0HUTEl]JhXFS>G6<]9'r;IlAWf9Oe(:<R#no\asX)"WMr01ht#t/Y/"uZ1TS!b8#GFQ&N%48ib#>;rOY^rN/P8;3@\`_0M`llBnLjIhIRcH=0!L"-LEX35n,6K$+a\JR#>0]ID]QlLhX)P!I&o4d`>Gj+\8[mJXVKNC&Jh@H^.%]QdL?eFR+p+nl3SMTGs1ruRV+1UE26ImAD\BbLKjj?fFN!/P]..l@ps@7[*m*&7MM*dWPP!9.8KWtYP7eT&"eI#k>eh6cV['88:>%*S\V68%4fp`1jf?-jtiAMZTP*=HH5qlnF;!+DTFDo"[b.pMm)r!1%:60SocjZ&(/Xn);=P^906-oAuh(f3C9RL:0YWO&JHUUTDQ@%?m;?!'F\:X&uE0',m+^<Z'h?&O(ZEif`3;E]K:cK&0L0e*5#sn]N;j>#9p>$.3=;,@&A<:<DK1):^I.FlC#mb"H^X]TID*F]!fZc%!'7YX8,uN418P+c:/@oX9E9qAN"%e`fi>._',4QJX@ACJ;BVUcLo4KC=#G#2`JP!$.4g;&5<-Rb&K6I[]\"AS0G[>."p&!:',eu0%REX#L(9/oaC2fK&)0@8@YW-C:RY&F5\A>l$Q(>IA-p)t#R;+c+03KiZ<2T9fZ3`:D&!$u9h0b^i!!X(gj9G_;Vu-O&^=Z/1!0blK%T+]*.WN/`*K(f"6fHN[BP\rei6A/=oqNMP]9(e$Y@Y>G[nh+!tc(IcsJfU=QDQ>#`el"/"P^oVtB"q?3S;N<L)+!1h-DXn=/dGda%57F0:7pJgYI;q:jS0fjPLQ71N[!Ea=</k@5*I9JD3M;B<NP,$,3aVf$43'^DORe=m5lcnM)m4r*Qj9Z,U@SCNaL_32I6b3F.H=J'%6O2_,j`#5DW4BJZ?j%%O]c;#Q+rpG3H;>[8g(NArEK"^lR-hc/6f!#2jP6F]dOCbLcF%M5Gk94[-#IWh3+qOJE($@(.uPXHG<La8%NelPIk<V6C]pU*aGTr6#?Db[TZ*cE:&H\fUk9^@?G1Qca.FqWm8CkW(h:=\s\,qFQ6BE+\,/YYa,#5pH8-+gF\V<mh7>=`MLX@WW%,3kJ]aQAgk+a$HY)8:%^9F.@&K#KSj>uqe(I1mH:l`5(.R9Eq1':8m`'%9#&m$X`q4b4ZQ!]<(SYXPPN\@F"MA->7QViLm]URj63%'Yq.r<LW2"1Dk!:+O+%GK)$jG<G)XjO+]bVAQr/&jN4+!XpWaVEOFr05S%+YFZM%=^(5,c+FX(/]G1RJ!tBIn%P`IPJsjN.j)rgZ%_>`Mq_#WW&i(2SeZ2gU228a&mp,Ms\k-P,cDO9=i!90:0RbM;,R,;Ahb]1Jm>$3s(k]bIMfB0[6qM'YDJDn*?@UTW+]^UB?7&K\[%=Gfsu0"N]djR,tNU&SRGdt+c3k.s<0Ki'89NdN<K2BRZH,Mlok0igu](_4t:=O\eU(dNfs3W'_MOjq;AFCYYh#(kgUE"LlTF_+tL%`O$c1M)(iWAhH<\WTMHEGT]-8h&2A)p:-#Rn2),g%Lp?n2R`f9!+DtiimEj*`Yt/a"<ciS(etMKc@#:sTELLBGs9`YZ-DFnelWOU%C[<0)2V(;ncc4()RDDbG"*+N!?H7WQT*<1#d`;VQJ6/bSc2s@o%PKmp:$%,`Ugg_dRb+bD+&Hrl:FECJWQdjUXYP>CR"aU4m;h\q%HMpg-J:qa5Hs#A?J/p3_JP6o/kk[7UXi$a57IYsbO,1O[I+?c!UN<98;9k9R9YCpKcN&H!1*a)g=X+R'5\s<`J9n9Y"3Q=]J2:<b%,8CD1V%Od1!$TE:.3q4trn7c9Dd0+>KV%fA->KKW_`"!m9Kf@i1!fVCp_OLd$H0oVk&C/Pi8G/\aCfa@D<fFWVZ4JA%t0=kM]+Fs%<SJ\Z/Qf6YdBZ"u*FJ=-^_7%i5,PObg2l/2&2]H]6UT!%o]@?LbZm]DB6n1_ZoZtNCoei;,+HNeHU%Vs9ML_.00__TLp.?HSp8=n%V0>HX7oRJugEN"rT/,hE_&sRu?Kkb(Y&O6m-3g9GU2KVkTp0<Mi^WCPU5sTJ4-7DE]^9+RH)/\8^!#Zd4CaT3JS"!l\H<+0\45o#%=*Uaf6LTH5BHbec&?fNT7dn(7HDI'4Jk)uB:ErU)#5pA?->Zd%&PX4dK3[micm3mlGPkX5,S*Ap>+Qum.gaG/Y`Lsm89AhpH14S_%+Vp5rK'%I7OZYHVT@6-t@.>.51.Zj_#0BYWOLts5%iXL;iP\6d-HT3[/\;'POp3Qb`FH/YfF^50%S^::*a2`SaPF]2jnb"m:C%p#%mcBP)Oh>146pu64[GZI#JIiHGQ`4AM5D[/&%)Yr[H-%Bn_T`91oTcF[<g*PQ+$=L-P[]EUaj[;Rp\(L#eT&1]&lgMbo>^=f`J+b3%(;J/,0dm9^:cDT^ip..^*MF1&h*iN.\5e#`e<?]P&<uo[N@B5Je(Kj&CgZ<85U!o5:l+-[QH@]#ST*HhLn<I;DM$5)*k[15,XsXV%YoMQj;"eT#7!$7>jn-%"7"HJk_F6(%AiU8QWnPP[(-jo*s&#pb-#LKn.NJ21Ul7)eH3lk;^fj+T+O2HU0Jsf!="UtB.prIkijrYa%l8>*A=6rm_6h(X:N+sI2]O;`Lmo9*/K'2`=Zf#b:9Z4;e?.07X#nff&G"1#D3qS!nq*(a<e^ei45[ttV^iX93Oq`#h;s(1s6aTrd%g$a!m@Y+$*[b$D[9m._@\2T%bP&\0L4,UiHKU9O%nI09'cDbqbhQWA2'A)oV;#mU8n.H?UQg>LA3>`QiM5"K=!((gsabQPcOo;/r%BR\SGFDrS]14g#t#?R2P-rZRV\+)&5M[$)?4Ku42-`^DEn.sJD[0`[CpJKKkUrQ/'KkOCh'hD$=3]WP.R!c835iZ*i^+j28&\hmF%1G;jQ(-=8tEqNAg</D$=n;uBSO_^>0L-ueND*UH2$UF0t'Zb5r>>W8"a#0ndG*U+"`M%-pH7Y/9/$fQCRZ*sgl`A3uW1-&TgO5h?%ODBM\3UR#*b0^JKL$pJJ?`k4@;TtL8b:CG<6mrb*22`R)9i.",l&I5Umat"<8:H5.HFn$u1nJ\9e%@[,UgflIj)$1^NeXtP=-1p;%?0<Jg&K!_Z/gE3oZsB6X*6boHQ2mUmICT2kWNM&V6F*_+_OZcnQ8MIjS9[U@#hIV.G(Y)DO\Es/a5c:^O&lEL\MC=b:3+<Rh>S>1%$)T9-V_;q@,s0r'^-GPVHCI@uM+6UdZ7t$tdq7OA`ana?E3I0jLR#=(?e)M7r@7=*HBiPlaOI=LhUb/s?,9\EWH@Z3,n+4j_Kq\D%#@9qi+5kVW^m9j;2^58VfOF1YZf=dh!M'WAXsW=NBsPX8F$c[lfjVMGNRJ^SE?JUIDAU,#m'tnscd8I%`>S_?A4Rc!1HQ.TbfX,^%9n067h<o(;A.D!0;a<<uNY/rmcMF_r^b^scAM_%%i$joE>-A=\[#[.Y/#:#^GIJG9iV8#$<YI;0*cFlU>*.]20M-,JPgRZf+]3=e%iQ92$P\pE,%PCCEo/fiA]A[:4e%^Un"%c3Do"J3>2Ip'97^3,TS4Z);)UteDG!''.=19Am]mO)+V`o?$9Fo+3Yoos`mL<_-L^&)T%!I8'"e5bJl.iPOL]11Hj(_7Jil7Nj?4S]%4mQ7iW63.^ES-32l"s/\.<s#*[DHWfU:Ef&''o5Xo@07Z"je`Dq#Vh@!4&%/K?Bph1%'n^G^g]BV,C-E*G@;o\kdrAS`4G/O/OW]+O!M!4Z.\"26nsb[ZVk@p\3U.>f&>5?D0`<j_+PBuS-VeIaZ&`4X,=F_t$EWQXDGc66%NH""pC[,`m>[N?lDp`+nD)be<)L[FP.&(,OA,G)dqI1@9J]Ag^hH[tj5udqO6sEXmk\)kU'b#\JkFR2_:%e5?K#*#$lqm0777+_c%[o*V:P'loFna;(M#8b;Cne]A*?cYAZ2UcPr4d:lLRbl_O.Om3r#\.668iKd]OL@Tlak7Q%1"+Mir).0\Kfm<C)PTP$jppi7OfFGK%<,fm%!=FH>-dpO))9KkaVA*rq7#%AgER<t![*`_+1Ts;_+Sq!h#`(&`2h#(D+=NTDgcBLn`WE>6<?N3N1675'kOMs05#Q,aY%U+u%i,S[_(4)[c$E99%[MQqT$dMjZgkD^dD%V@P&Lj`,</nuME`=<0_^0V@9$o7?1iQYC,qOUaQRp,sMGp$TT7WI\GV@'N04jm2M<O.Q%D1j]HJqH=00jk3A?A;`<mU>Nsg-LN*%W"BKGqV1f#9qlORXG-uCT%$]^ok1"RAOeH$C]i"NbTuu6b/SDc9dtUFh>fNSLm6,NP^`*%?4].'FjM)I\,oD7X_6\\a$m/n.EWR&&C#L0"Zp]%[%a4j.5$VS$_kTAO%a=AV_Q9o6,]_D>9G6Wc9+o*X5d`YiLYsL9j$=\dr(3+%b&B8qYZt#jNl*LSdSX-=JB42k5`?^@oi[rL]?jrrb#9/KW&A>g]\3)RNX!NYA.79OS.RpWR+/r?`b[C-7$N#i.a#th=;H8;_\Fdq%)7T>)Y\eAeX%J$^$7%JU%!2Pl$j_eaf6XtHU_)kONs4Y;@:'db_Kf8Y@eXIL>VV^n'mtj#[Ds`Q<N%(>TkC^OJmX3a>K5j^/U_#r%U(BQo5jZDuc7drjLqS(C658O]YoE\PTqa%N<`E`%&%L<o5WKAX+s=pQ)<&:#`_je!fqCu$+BLHR'o\6)jDeq1e*9iSjkckF\GC`_%=O)^7O+--%O'!MmXG\?\@IS,T"9NT!:7e9.LgQXF_.1uOjV)psliiEOm5B4[]E8R#X+o_U$(18S7<;=7#GMfqI"*FgX1o.hQTkJ(%K1<,pG/2(PM2[d>DU*EmEXYDc>(A:)n>n\*R4%#9!1KsgL2SSi74^;pMF[t;@PFthBdN?(@43Wp76!2\ej?qMip!E`Zl+-nX+cD'%>T+ZFNRB&#R=Q-u'cZZt-jukDoBEBb@EFOgdPBpM(VV,4aP!^NFZ8k',`<Pe=[dSc#`2tl5ie"!Y42OZ97):GC;4$=D.5bnIg'qZ%Fb\f\&US\4a]6l%7Lk?[J-[+:AsH;7&aG0A%5_\uBU[%:PRHJ-oKnI1$l<W$8?Fc;&W9N=@H:KX_MD3e"os>#E>l\J][H1j&e3Yu%MQ-14H-$7UV*YH*%P%pe;L(J.9!eu*<&HM>`*\^*Q:pMY5qh4T-s]!2QV6ame'TNPi<U)JnBEp@0XI@uCr14<pVt>5+!ta0DH1#I%7pn%VU.[rT7T[O"Wi-`6]V-D'n:o$J?>HE"?op.t]s]l$[%-rGSHd]Mcd(t!1@T3J]Y9qYF1/tIAh`d'rjn^?3."fq/iKhJ3]_\n%@6CA1J62]lJg#^/Y;dX1-"s83GYl>tLJ4"Kl<I;ZG_`(igWpA1qQkk&=J`5+%mq4)6>;85h2V=U&n(F-6fs:d!p_S(b,WA*dR@AO%RY"emk)*Gra(aF^AK[(\g_.^=mfmXM1bL=]<*LAXO-RFOW:'V',%npk.#+nnmu.M%6i\Cc3Lc-\ntEV(`C]WLGpZPW@?J%7nY=mL%H)\F'O;lqSjtbV179sKWc9i_[Kc9PQqJOB`MHYAc[]@EWU0Vi6AT%'D\qk[>SZR%N(5$R9h:^rG2iLs&ROC*)>Gpr6<.Jg1"6.`R%IPfb)>J)BhJ?NX+.AGElp@GIEoOtLIG,=0AS&kG@dt6Nqa`ZR1$c9IGJZ)X#[5[\F4Pm$QZt<7M-g$/[;WV6Q_h)&KJdG!7p5B&1%;OPRA@;\mf;WV\:&O/'MK3jQQZD)`_1Hg&ZA'/K_p2>)so`cPM6`@!D#BKV*.+Sc$Y-a$5O.t<W.17A,%a&A1++`(H`@7SPr6gBN%(q^Q;Mt@pe25QjsL/fLgcN[^>X]WTK+C0sQN@C-H_OEn]8*p"<UqAYMfAS?<`>L=r3F%C075Hun^jo<;<k8QZ=BhdoY%L:G/4;2,%kDI6PVN[]hXrcpR%D=M^[XQW[#G_i^CY%J+`S8\p7/_ZVSHO[J"0iDC6S:qNqQ:A4@BJktIXm.[nfFjbl>N966=>(@reU[G_-1OI%1$').hY:1;p6HDG"KoWLfu$t0NB,7l^s'r/_W9taA^/"(C:<;n`p8<PJpHt+%89M5V2mSSVm@sWNTSMnYr'$6on[aeD,@h&e;F<q%:q$\*lo'%&KeG<!HM'bMd0-qY9YoXa5/82,\rjV.plRX&hUF5IMR>Dp^0@a&/<&HF*?#CtoS:<Z6X<LmTY>'M5N'inXUR]:rc=qg%r1g8QO&B858"I$Rq;Z8HXMdKB=HKDhq5p/rE%2-/7d[3>_(8G\O`Y9Lku(erYSJn\g;?laL<m]h]a7fG@GZ[$<&HrI%Lr!G"jn0A%#mZS;QmQSG%$ZZpZ7`'ZL)4H:dVad_oBf]&^`/.\1\lYs!?Q2@6P8SA.Gq[67:Ru4QokA^+qB0b+;oErC"XK"!P73ckh1d<OTNW#%3ZM_L*jB/+%Kgc^2(FO)eD^h897@]#K-$$),ghs$+O8XbW46u#U$A=_+IE^YNie^"Ql:h^'uWlN3kNF:;c1loD1niCX<d&IR1[bs%<Yknj+6hY_SYY48,DMsWY5JS?>'B-=KTYmIWc>3D&B3i=]EOPeLR/SjQoO<'e3SH&YS+<VNsOcbP]JN68/@nQG>uKBi?++T@e)?@%Gp'[RlFkhj@H0iclf.bl3U"9gRZQ"-%"tl>a?m*1813@CVg&PG?e#:BD6</N)^)Pp"_Z/g^aYoB0rb3oH6Q92=YTWdYVdmO[4m4`%J$-$88IaN5`n&QY<Q?O,&"@7)ap=Jn2S$>nWm@N\$WWQK-ZLR74Q17_":Ht.1CjmUnJ89j@l1dGgHsg.huMQ$ME'o\DhiX%O<cu0%OqtGgV]5^&X/b2>gal"F[o&EKDAZ_sSM`]]i^V\VS+;(&$47<>4_[@@dAH>n@rre>U)ZNXq^kn*e=E<AbN\*@I+nV)%!iHhDoHdV%5W!dq`5A)P3@L-,5O4)#5<Jf%J"L#khne4ilhKRl:Yo?+GPp:Gp$LT*l0Q%Flb=DMf+/CQ0@qktGOc4"eUN$nHo`=?^OQ/3&1KB?%o+qeKq=<tArU\4][H.0RC-R+FEdYI5I?4dGh]6&6a8\9Y=O-*uYM\2#HmcJY:ZT+*oD;nO92h"Yr'X$OabtYqkRBTP'Aq^+8c8(Q%Q$i/E^]3G_BE&JQ'BUD~>%AI9_PrivateDataEnd